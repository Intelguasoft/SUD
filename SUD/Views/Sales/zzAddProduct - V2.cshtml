@model SUD.ViewModels.AddProductSaleView

@{
    ViewBag.Title = "Venta";
    ViewBag.Message = "Crear Venta";
}

@using (Ajax.BeginForm("AddProduct", "Sales",

            new AjaxOptions
            {

                OnSuccess = "OnSuccess",
                OnFailure = "OnFailure",
                LoadingElementId = "progress"

            }))

{
    @Html.AntiForgeryToken()

    <!-- Content Header (Page header) -->
    <section class="content-header">
        <h1>
            <!--aqui va el titulo de la pagina que se va a mostrar, como el siguiente ejemplo -->
            @ViewBag.Title - <small>@ViewBag.Message</small>
        </h1>
        <ol class="breadcrumb">
            <li><a href="@Url.Action("Index")"><i class="fa fa-pencil-square-o"></i> Ventas</a></li>
            <li class="active">Crear</li>
        </ol>
    </section>
    <!-- Main content -->
    <section class="content">
        <!-- Default box -->
        <div class="box">
            <div class="box-header with-border">
                <h3 class="box-title">@ViewBag.Message</h3>
                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip"
                            title="Collapse">
                        <i class="fa fa-minus"></i>
                    </button>
                    <button type="button" class="btn btn-box-tool" data-widget="remove" data-toggle="tooltip" title="Remove" disabled>
                        <i class="fa fa-times"></i>
                    </button>
                </div>
            </div>
            <div class="box-body">
                <!-- Aca se incluye todo el contenido de la pagina que se desea mostrar -->
                <!-- por ejemplo el index/tabla de algun recurso -->
                @*<div class="row">
                    <div class="col-xs-12 col-md-6">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group">
                            @Html.LabelFor(model => model.ProductId, htmlAttributes: new { @class = "control-label col-md-2" })

                            @Html.DropDownList("ProductId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ProductId, "", new { @class = "text-danger" })

                        </div>
                    </div>

                    <div class="col-xs-12 col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })

                            @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })

                        </div>
                    </div>*@


                    @*--------------- Insertar por codigo de barra--------------------*@

                    
                <div class="row">
                    <div class="col-xs-12 col-md-6">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="form-group">
                            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })

                            @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })

                        </div>
                    </div>

                </div>

                <div class="form-group pull-right">
                    <button type="submit" class="btn btn-primary ld-ext-right" id="btn-add-product">
                        <i class="fa fa-floppy-o" aria-hidden="true"> </i> Agregar
                        <div class="ld ld-ring ld-spin"></div>
                    </button>
                </div>

                <div id="DetailProducts">

                    @Html.Partial("Detalle")

                </div>

            </div>
            <!-- /.box-body -->

            <div class="box-footer">
                <!-- Aca se incluye aquellas acciones relacionadas con lo antes mostrado -->
                <!-- por ejemplo botones de facturacion, exportar a excel/pdf o similares -->

                <div class="form-group pull-right">
                    <a href="@Url.Action("Index")" class="btn btn-success"> <i class="fa fa-undo" aria-hidden="true"> </i> Regresar</a>
                    <a href="@Url.Action("Create")" class="btn btn-primary"> <i class="fa fa-forward" aria-hidden="true"> </i> Confirmar</a>
                </div>

            </div>

            <!-- /.box-footer-->
        </div>
        <!-- /.box -->
    </section>
    <!-- /.content -->
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        //variables de lector de codigo de barras
        var inputStart, inputStop, firstKey, lastKey, timing, userFinishedEntering;
        var minChars = 3;
        var textval =$("scanInput").value;


        $(document).ready(function () {
            LoadData();
            $("#btn-add-product").click(function () {

                $("#btn-add-product").addClass("running");

            });

        });

        function LoadData() {
            $.ajax({

                url: "@Url.Action("Detalle")",
                type: "GET",
                contentType: "HTML"


            }).done(function (result) {

                $("#DetailProducts").html(result);

            });
        }
        function OnSuccess(response) {

            $("#btn-add-product").removeClass("running");
            //alert("Producto Agregado Correctamente");

            LoadData();

            $.notify("Producto agregado exitosamente", "success");

        }

        function OnFailure(response) {

            $.notify("Ha ocurrido un error", "error");
        }

        
        $("#scanInput").keypress(function (e) {
            // restart the timer
           // if (timing) {
               // clearTimeout(timing);
           // }

            // handle the key event
            if (e.which == 13) {
                // Enter key was entered

                // don't submit the form
                e.preventDefault();

                // has the user finished entering manually?
                if ($("#scanInput").val().length >= minChars) {
                    userFinishedEntering = true; // incase the user pressed the enter key


                    inputComplete();
                }
            }
            else {

                // start the timer again
                
            }
        });

        $("#scanInput").focus();

    </script>

}